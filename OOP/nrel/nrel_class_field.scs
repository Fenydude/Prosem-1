
sc_node_not_relation -> concept_class;;
sc_node_not_relation -> concept_object;;
sc_node_not_relation -> concept_variable;;
sc_node_not_relation -> number;;

sc_node_norole_relation -> nrel_class_field;;
sc_node_norole_relation -> nrel_access;;
sc_node_norole_relation -> nrel_realize;;

nrel_class_field
	=> nrel_main_idtf:
		[class field]
	    (* <- lang_en;; *);
	=> nrel_main_idtf:
	    [поле класса]
	    (* <- lang_ru;; *);;

        
definition ->...
(*
	-> rrel_key_sc_element : nrel_class_field;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[По́ле кла́сса в объектно-ориентированном программировании — переменная, связанная с классом или объектом.](*
<-lang_ru;;
*);;
*);;

	=> nrel_main_idtf: [Определение (поле класса)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_class;
		concept_object
	};;
*);;


statement ->...
(*
	-> rrel_key_sc_element : nrel_class_field;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Доступ к полям осуществляется по их имени.](*
<-lang_ru;;
*);;
*);;
	=> nrel_main_idtf: [Утверждение(поле класса)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		nrel_realize;
		nrel_access
	};;
*);;

arity -> ..kryg;;
..kryg -> nrel_class_field;;
..kryg => nrel_measurement: 2;;
number -> 2;;

nrel_class_field
=>nrel_first_domain:concept_class;
=>nrel_second_domain:concept_variable;
=>nrel_definitional_domain: ...(*
<=nrel_combination:
{
concept_class;
concept_variable
};;
*);;

concept_class -> ..f;;
..f => nrel_class_field: ..s;;
concept_variable -> ..s;;


relation => nrel_inclusion: oriented_relation;;
relation => nrel_inclusion: norole_relation;;
oriented_relation -> nrel_class_field;;
norole_relation -> nrel_class_field;;
binary_relation => nrel_inclusion: transitive_relation;;
binary_relation => nrel_inclusion: asymetric_relation;;
binary_relation => nrel_inclusion: antisymmetric_relation;;
antireflexive_relation -> nrel_class_field;;
transitive_relation -|> nrel_class_field;;






